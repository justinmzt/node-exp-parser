module.exports = {
    exp: [
        [
            'a: 1 and b: 2',
            'a: 1 and b: 2',
            '{"a":1,"b":2}',
        ], // 普通表达式测试
        [
            'a : 1 and b :    　2',
            'a: 1 and b: 2',
            '{"a":1,"b":2}',
        ], // 各种中间有多个空格
        [
            'a: 1 and b: 2 or c: 3 or d: 4',
            'a: 1 and b: 2 or c: 3 or d: 4',
            '{"$or":[{"a":1,"b":2},{"c":3},{"d":4}]}',
        ], // 四个条件 and or 混用情况
        [
            'a: 1 and b: 2 or (c: 3 or d: 4)',
            'a: 1 and b: 2 or c: 3 or d: 4',
            '{"$or":[{"a":1,"b":2},{"c":3},{"d":4}]}',
        ], // 四个条件 and or 混用情况二
        [
            'a: 1 or b: 2 and (c: 3 or d: 4)',
            'a: 1 or b: 2 and (c: 3 or d: 4)',
            '{"$or":[{"a":1},{"$and":[{"b":2},{"$or":[{"c":3},{"d":4}]}]}]}',
        ], // 四个条件 and or 混用情况三
        [
            'a: 1 or (b: 2 and (c: 3 or d: 4))',
            'a: 1 or b: 2 and (c: 3 or d: 4)',
            '{"$or":[{"a":1},{"$and":[{"b":2},{"$or":[{"c":3},{"d":4}]}]}]}',
        ], // 四个条件 and or 混用情况四
        [
            'a: 1 and (b: 2 or (c: 3 or d: 4))',
            'a: 1 and (b: 2 or c: 3 or d: 4)',
            '{"$and":[{"a":1},{"$or":[{"b":2},{"c":3},{"d":4}]}]}',
        ], // 四个条件 and or 混用情况五
        [
            'a: 1 and (b: 2 or (c: 3 and d: 4))',
            'a: 1 and (b: 2 or c: 3 and d: 4)',
            '{"$and":[{"a":1},{"$or":[{"b":2},{"c":3,"d":4}]}]}',
        ], // 四个条件 and or 混用情况六
        [
            '(a: 1 or b: 2) and c: 3',
            '(a: 1 or b: 2) and c: 3',
            '{"$and":[{"$or":[{"a":1},{"b":2}]},{"c":3}]}',
        ], // 四个条件 and or 混用情况
        [
            'a: "Windows 7 SP2 Enterprise"',
            'a: "Windows 7 SP2 Enterprise"',
            '{"a":"Windows 7 SP2 Enterprise"}',
        ], // 普通双引号匹配

        // 模糊查询
        [
            'a: "android*"',
            'a: "android*"',
            '{"a":{"$regex":"android.*?","$options":"i"}}',
        ], // 模糊查询 1
        [
            'a: "*android"',
            'a: "*android"',
            '{"a":{"$regex":".*?android","$options":"i"}}',
        ], // 模糊查询 2
        [
            'a: "*android*"',
            'a: "*android*"',
            '{"a":{"$regex":".*?android.*?","$options":"i"}}',
        ], // 模糊查询 3

        [
            '"a": 1',
            'a: 1',
            '{"a":1}',
        ], // 双引号 key 匹配，key 中不包含 \/:[]() 时引号会被去掉
        [
            '"Windows 7 SP2 Enterpr : ise": "Windows 7 SP2 Enterprise"',
            '"Windows 7 SP2 Enterpr : ise": "Windows 7 SP2 Enterprise"',
            '{"Windows 7 SP2 Enterpr : ise":"Windows 7 SP2 Enterprise"}',
        ], // 双引号 key 匹配，key 中包含 \/:[]() 时引号不会被去掉
        [
            'a: [1,2,3,4]',
            'a: [1, 2, 3, 4]',
            '{"a":{"$in":[1,2,3,4]}}',
        ], // 数组
        [
            'a:["[]","sadf","ff"] or b: [1,2,3]',
            'a: ["[]", "sadf", "ff"] or b: [1, 2, 3]',
            '{"$or":[{"a":{"$in":["[]","sadf","ff"]}},{"b":{"$in":[1,2,3]}}]}',
        ], // 数组里面有字符串，且字符串里有数组的特殊符号
        [
            'a:TIME("2010/10/10 15:00:00")',
            'a: TIME("2010/10/10 15:00:00")',
            '{"a":"2010-10-10T07:00:00.000Z"}',
        ], // 普通日期查询
        [
            'a:TIME("2010*")',
            'a: TIME("2010*")',
            '{"a":{"$gte":"2009-12-31T16:00:00.000Z","$lt":"2010-12-31T16:00:00.000Z"}}',
        ], // 仅年份模糊查询
        [
            'a:TIME("2010/11*")',
            'a: TIME("2010/11*")',
            '{"a":{"$gte":"2010-10-31T16:00:00.000Z","$lt":"2010-11-30T16:00:00.000Z"}}',
        ], // 仅年月模糊查询
        [
            'a:TIME("2010/12*")',
            'a: TIME("2010/12*")',
            '{"a":{"$gte":"2010-11-30T16:00:00.000Z","$lt":"2010-12-31T16:00:00.000Z"}}',
        ], // 仅年月跨年模糊查询
        [
            'a:TIME("2010/11/30*")',
            'a: TIME("2010/11/30*")',
            '{"a":{"$gte":"2010-11-29T16:00:00.000Z","$lt":"2010-11-30T16:00:00.000Z"}}',
        ], // 仅日期跨月模糊查询
        [
            'a:TIME("2010/12/31*")',
            'a: TIME("2010/12/31*")',
            '{"a":{"$gte":"2010-12-30T16:00:00.000Z","$lt":"2010-12-31T16:00:00.000Z"}}',
        ], // 仅日期跨月且跨年模糊查询
        [
            'not a:TIME("2010/12/31*") and b: 1',
            'not a: TIME("2010/12/31*") and b: 1',
            '{"$nor":[{"a":{"$gte":"2010-12-30T16:00:00.000Z","$lt":"2010-12-31T16:00:00.000Z"}}],"b":1}',
        ], // 仅日期跨月且跨年模糊查询
        [
            'b: 1 and c:2 and not a:TIME("2010/12/31*") and d: "test"',
            'b: 1 and c: 2 and not a: TIME("2010/12/31*") and d: "test"',
            '{"b":1,"c":2,"$nor":[{"a":{"$gte":"2010-12-30T16:00:00.000Z","$lt":"2010-12-31T16:00:00.000Z"}}],"d":"test"}',
        ], // 联合测试日期和 not
        [
            'b: 1 and c:2 and not (a:TIME("2010/12/31*") and d: "test")',
            'b: 1 and c: 2 and not (a: TIME("2010/12/31*") and d: "test")',
            '{"b":1,"c":2,"$nor":[{"a":{"$gte":"2010-12-30T16:00:00.000Z","$lt":"2010-12-31T16:00:00.000Z"},"d":"test"}]}',
        ], // 联合测试日期和 not
        [
            '',
            '',
            '{}',
        ],  // 空表达式输入，返回 undefined
        [
            'a',
            'a',
            '{"a":{"$exists":true}}',
        ], // 单值输入
        [
            'a:\\0',
            'a: \\0',
            '{"a":{"$exists":false}}',
        ], // 识别空值输入
        [
            'not a',
            'not a',
            '{"$nor":[{"a":{"$exists":true}}]}',
        ], // 否定单值输入
        [
            'not a:\\0',
            'not a: \\0',
            '{"$nor":[{"a":{"$exists":false}}]}',
        ], // 否定空值输入
        [
            'a:TIME("2010/10/10 15:00:00","2010/10/11 15:00:00")',
            'a: TIME("2010/10/10 15:00:00", "2010/10/11 15:00:00")',
            '{"a":{"$gte":"2010-10-10T07:00:00.000Z","$lt":"2010-10-11T07:00:00.000Z"}}',
        ], // 普通日期时间段查询
        [
            'a:TIME("2010*","2011*")',
            'a: TIME("2010*", "2011*")',
            '{"a":{"$gte":"2009-12-31T16:00:00.000Z","$lt":"2011-12-31T16:00:00.000Z"}}',
        ], // 年份模糊时间段查询
        [
            'a:TIME("2010/11*","2011/12*")',
            'a: TIME("2010/11*", "2011/12*")',
            '{"a":{"$gte":"2010-10-31T16:00:00.000Z","$lt":"2011-12-31T16:00:00.000Z"}}',
        ], // 仅年月模糊时间段查询
        [
            'a:TIME("2010/11/30*","2010/12/31*")',
            'a: TIME("2010/11/30*", "2010/12/31*")',
            '{"a":{"$gte":"2010-11-29T16:00:00.000Z","$lt":"2010-12-31T16:00:00.000Z"}}',
        ], // 仅日期跨月模糊时间段查询
        [
            'a > 1',
            'a > 1',
            '{"a":{"$gt":1}}'
        ], // 数字大于
        [
            'a >= 1',
            'a >= 1',
            '{"a":{"$gte":1}}'
        ], // 数字大于等于
        [
            'a < 1',
            'a < 1',
            '{"a":{"$lt":1}}'
        ], // 数字小于
        [
            'a <= 1',
            'a <= 1',
            '{"a":{"$lte":1}}'
        ], // 数字小于等于
        [
            'a > TIME("2010/10/10 15:00:00")',
            'a > TIME("2010/10/10 15:00:00")',
            '{"a":{"$gt":"2010-10-10T07:00:00.000Z"}}'
        ], // 日期大于
        [
            'a < TIME("2010/10/10 15:00:00")',
            'a < TIME("2010/10/10 15:00:00")',
            '{"a":{"$lt":"2010-10-10T07:00:00.000Z"}}'
        ], // 日期小于
        [
            'a >= TIME("2010/10/10 15:00:00")',
            'a >= TIME("2010/10/10 15:00:00")',
            '{"a":{"$gte":"2010-10-10T07:00:00.000Z"}}'
        ], // 日期大于等于
        [
            'a <= TIME("2010/10/10 15:00:00")',
            'a <= TIME("2010/10/10 15:00:00")',
            '{"a":{"$lte":"2010-10-10T07:00:00.000Z"}}'
        ], // 日期小于等于
        [
            'a<=TIME("2010/10/10 15:00:00","2010/10/11 15:00:00")',
            'a <= TIME("2010/10/10 15:00:00", "2010/10/11 15:00:00")',
            '{"a":{"$lte":"2010-10-11T07:00:00.000Z"}}',
        ], // 日期小于等于结合时间段查询
        [
            'a<=TIME("2010*","2011*")',
            'a <= TIME("2010*", "2011*")',
            '{"a":{"$lte":"2011-12-31T16:00:00.000Z"}}',
        ], // 日期小于等于结合年份模糊时间段查询
        [
            'a<=TIME("2010/11*","2011/12*")',
            'a <= TIME("2010/11*", "2011/12*")',
            '{"a":{"$lte":"2011-12-31T16:00:00.000Z"}}',
        ], // 日期小于等于结合仅年月模糊时间段查询
        [
            'a<=TIME("2010/11/30*","2010/12/31*")',
            'a <= TIME("2010/11/30*", "2010/12/31*")',
            '{"a":{"$lte":"2010-12-31T16:00:00.000Z"}}',
        ], // 日期小于等于结合仅日期跨月模糊时间段查询
        [
            'a>TIME("2010/10/10 15:00:00","2010/10/11 15:00:00")',
            'a > TIME("2010/10/10 15:00:00", "2010/10/11 15:00:00")',
            '{"a":{"$gt":"2010-10-10T07:00:00.000Z"}}',
        ], // 日期大于结合时间段查询
        [
            'a>TIME("2010*","2011*")',
            'a > TIME("2010*", "2011*")',
            '{"a":{"$gt":"2009-12-31T16:00:00.000Z"}}',
        ], // 日期大于结合年份模糊时间段查询
        [
            'a>TIME("2010/11*","2011/12*")',
            'a > TIME("2010/11*", "2011/12*")',
            '{"a":{"$gt":"2010-10-31T16:00:00.000Z"}}',
        ], // 日期大于结合仅年月模糊时间段查询
        [
            'a>TIME("2010/11/30*","2010/12/31*")',
            'a > TIME("2010/11/30*", "2010/12/31*")',
            '{"a":{"$gt":"2010-11-29T16:00:00.000Z"}}',
        ], // 日期大于结合仅日期跨月模糊时间段查询
        [
            'a:1 and (b: "test")',
            'a: 1 and b: "test"',
            '{"a":1,"b":"test"}',
        ], // 无用的括号去除
        [
            'a:1and',
            'a: "1and"',
            '{"a":"1and"}',
        ], // 关键词如果不打空格会被连进之前的字符串内，此处结果是 JSON 字符串增加了反斜杠
        [
            'a and "123"',
            'a and 123',
            '{"123":{"$exists":true},"a":{"$exists":true}}',
        ], // 123 作为 key
        [
            'b: 12)',
            'b: 12',
            '{"b":12}',
        ], // 右括号忽略

        // 反斜杠情况
        [
            'a : \\1 and b :    　2',
            'a: "1" and b: 2',
            '{"a":"1","b":2}',
        ], // 去除反斜杠
        [
            'a:\\0',
            'a: \\0',
            '{"a":{"$exists":false}}',
        ], // 识别空值输入
        [
            'a:\\and',
            'a: "and"',
            '{"a":"and"}',
        ], // 逻辑符如果不打空格会被连进之前的字符串内，此处结果是 JSON 字符串增加了反斜杠
        [
            'a:sdf$',
            'a: "sdf$"',
            '{"a":"sdf$"}',
        ], // 不转义 $ 符号
        [
            'a:sdf\\$',
            'a: "sdf\\$"',
            '{"a":"sdf$"}',
        ], // 转义 $ 符号情况下属于自动删除反斜杠的情况
        [
            'a:\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\+\\;\\\'\\:\\"\\{\\}\\[\\\\\\]\\"\\,',
            'a: "\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\+\\;\\\'\\:\\"\\{\\}\\[\\\\\\]\\"\\,"',
            '{"a":"!@#%^&*()-+;\':\\"{}[\\\\]\\","}',
        ], // 综合的转义符测试
        [
            'a:sdf\\*',
            'a: "sdf\\*"',
            '{"a":"sdf*"}',
        ], // 转义星号
        [
            'a:sdf\\',
            'a: "sdf"',
            '{"a":"sdf"}',
        ], // 反斜杠结尾去除
        [
            'a:\\ and b:"\\\\" and c: "\\@"',
            'a: "" and b: "\\\\" and c: "\\@"',
            '{"a":"","b":"\\\\","c":"@"}',
        ], // 单个反斜杠和引号内的反斜杠
        [
            'a: "Win\\"dows 7 SP2 Enterprise"',
            'a: "Win\\"dows 7 SP2 Enterprise"',
            '{"a":"Win\\"dows 7 SP2 Enterprise"}',
        ], // 字符串内有引号的情况
        [
            'a: Win\\"do\\*ws$\\',
            'a: "Win\\"do\\*ws$"',
            '{"a":"Win\\"do*ws$"}',
        ], // 字符串内有引号的情况2
        [
            'a:\\!',
            'a: "\\!"',
            '{"a":"!"}',
        ], // 多余的 NOT 符号被转义了
        [
            'a:\\"',
            'a: "\\""',
            '{"a":"\\""}', // 此处为 JSON 字符串添加的反斜杠
        ], // 多余的 NOT 符号被转义了
        // 词法分析测试
        [
            'a: note',
            'a: "note"',
            '{"a":"note"}',
        ], // 词法分析 not
        [
            'a: android',
            'a: "android"',
            '{"a":"android"}',
        ], // 词法分析 and
    ],
}